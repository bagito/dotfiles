set nocompatible
filetype off

set rtp+=~/.vim/bundle/vundle
call vundle#rc()

source ~/.vim/vimrc.bundles

" airline {
    set laststatus=2
    let g:airline_powerline_fonts = 1
    let g:ailine_theme = 'molokai'
    let g:airline#extensions#tabline#enabled = 1
" }


set t_Co=256
colorscheme molokai
let g:rehash256=1
set background=dark

filetype plugin indent on
syntax on
set mouse=a
set mousehide
scriptencoding utf-8

if has('clipboard')
    set clipboard=unnamedplus
endif

set shortmess+=filmnrxoOtT
set viewoptions=folds,options,cursor,unix,slash
set virtualedit=onemore
set history=1000
set spell
set hidden

au FileType gitcommit au! BufEnter COMMIT_EDITMSG call setpos('.', [0, 1, 1, 0])

function! ResCur()
    if line("'\"") <= line("$")
        normal! g`"
        return 1
    endif
endfunction

augroup resCur
    autocmd!
    autocmd BufWinEnter * call ResCur()
augroup END

set backup
if has('persistent_undo')
    set undofile
    set undolevels=1000
    set undoreload=10000
endif

set tabpagemax=15
set showmode

set cursorline

highlight clear SignColumn
highlight clear LineNr
let g:CSApprox_hook_post = ['hi clear SignColumn']

set backspace=indent,eol,start
set linespace=0
set nu
set showmatch
set incsearch
set hlsearch
set winminheight=0
set ignorecase
set smartcase
set wildmenu
set wildmode=list:longest,full
set whichwrap=b,s,h,l,<,>,[,]
set scrolljump=5
set scrolloff=3
set foldenable
set list
set listchars=tab:›\ ,trail:•,extends:#,nbsp:.

" format {

set nowrap
set autoindent
set shiftwidth=4
set expandtab
set tabstop=4
set softtabstop=4
set nojoinspaces
set splitright
set splitbelow
set pastetoggle=<F12>

" }

" keys {
let mapleader = ','
noremap j gj
noremap k gk

nnoremap Y y$

vnoremap < <gv
vnoremap > >gv

cmap w!! w !sudo tee % >/dev/null

" }

" plugins {
    " tasklist {
        map <leader>td <Plug>TaskList
    " }

    " fugitive {
        nnoremap <silent> <leader>gs :Gstatus<CR>
        nnoremap <silent> <leader>gd :Gdiff<CR>
        nnoremap <silent> <leader>gc :Gcommit<CR>
        nnoremap <silent> <leader>gb :Gblame<CR>
        nnoremap <silent> <leader>gl :Glog<CR>
        nnoremap <silent> <leader>gp :Git push<CR>
        nnoremap <silent> <leader>gr :Gread<CR>
        nnoremap <silent> <leader>gw :Gwrite<CR>
        nnoremap <silent> <leader>ge :Gedit<CR>
        nnoremap <silent> <leader>gi :Git add -p %<CR>
    " }
    
    " python-mode {
        let g:pymode = 1
        let g:pymode_folding = 0
        let g:pymode_syntax = 1
        let g:pymode_syntax_all = 1
        let g:pymode_syntax_print_as_function = 1
        let g:pymode_syntax_string_formatting = g:pymode_syntax_all
        let g:pymode_syntax_string_format = g:pymode_syntax_all
        let g:pymode_syntax_string_templates = g:pymode_syntax_all
        let g:pymode_syntax_doctests = g:pymode_syntax_all

        let g:pymode_rope = 1
        let g:pymode_rope_guess_project = 0
        let g:pymode_rope_completion_bind = '<C-Space>'
        let g:pymode_rope_autoimport = 1
        let g:pymode_rope_rename_bind = '<C-c>rr'

        let g:pymode_trim_whitespaces = 1

        let g:pymode_quickfix_minheight = 3
        let g:pymode_quickfix_maxheight = 6

        let g:pymode_doc = 1
        let g:pymode_doc_key = 'K'

        let g:pymode_lint = 1
        let g:pymode_lint_checkers = ['pyflakes', 'pep8']
        let g:pymode_lint_on_write = 1
        let g:pymode_lint_message = 1
        let g:pymode_lint_ignore = ""

        let g:pymode_virtualenv = 1

        let g:pymode_breakpoint = 1
        let g:pymode_breakpoint_key = 'b'

        let g:pymode_syntax = 1
        let g:pymode_syntax_all = 1
        let g:pymode_syntax_indent_errors = g:pymode_syntax_all
        let g:pymode_syntax_space_errors = g:pymode_syntax_all

    " }
" }
